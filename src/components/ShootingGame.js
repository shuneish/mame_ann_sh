import React, { useState, useEffect, useRef } from 'react';
import ScoreManager from './ScoreManager';

const ShootingGame = ({ className = '' }) => {
  const [score, setScore] = useState(0);
  const [gameActive, setGameActive] = useState(false);
  const [targets, setTargets] = useState([]);
  const [showScoreManager, setShowScoreManager] = useState(false);
  const gameRef = useRef(null);

  // „Çø„Éº„Ç≤„ÉÉ„Éà„ÅÆÁîüÊàê
  const generateTarget = () => {
    const x = (Math.random() - 0.5) * 8; // -4 „Åã„Çâ 4
    const y = Math.random() * 3 + 1; // 1 „Åã„Çâ 4
    const z = Math.random() * 5 - 8; // -8 „Åã„Çâ -3
    
    return {
      id: Date.now() + Math.random(),
      position: `${x} ${y} ${z}`,
      color: `hsl(${Math.random() * 360}, 70%, 50%)`,
      size: Math.random() * 0.5 + 0.3
    };
  };

  // „Ç≤„Éº„É†ÈñãÂßã
  const startGame = () => {
    setScore(0);
    setGameActive(true);
    setShowScoreManager(false);
    
    // ÂàùÊúü„Çø„Éº„Ç≤„ÉÉ„Éà„ÇíÁîüÊàê
    const initialTargets = Array.from({ length: 5 }, () => generateTarget());
    setTargets(initialTargets);
  };

  // „Ç≤„Éº„É†ÁµÇ‰∫Ü
  const endGame = () => {
    setGameActive(false);
    setShowScoreManager(true);
  };

  // „Çø„Éº„Ç≤„ÉÉ„Éà„Çí„ÇØ„É™„ÉÉ„ÇØ„Åó„ÅüÊôÇ„ÅÆÂá¶ÁêÜ
  const handleTargetClick = (targetId) => {
    if (!gameActive) return;
    
    // „Çπ„Ç≥„Ç¢Âä†ÁÆó
    setScore(prev => prev + 10);
    
    // „Çø„Éº„Ç≤„ÉÉ„Éà„ÇíÂâäÈô§
    setTargets(prev => prev.filter(target => target.id !== targetId));
    
    // Êñ∞„Åó„ÅÑ„Çø„Éº„Ç≤„ÉÉ„Éà„ÇíÁîüÊàê
    setTimeout(() => {
      setTargets(prev => [...prev, generateTarget()]);
    }, 1000);
  };

  // „Ç≤„Éº„É†ÊôÇÈñì„ÅÆÁÆ°ÁêÜ
  useEffect(() => {
    if (!gameActive) return;
    
    const timer = setTimeout(() => {
      endGame();
    }, 60000); // 60Áßí„Åß„Ç≤„Éº„É†ÁµÇ‰∫Ü
    
    return () => clearTimeout(timer);
  }, [gameActive]);

  return (
    <div className={className}>
      <div className="game-ui">
        <div className="game-info">
          <h2>üéØ AR„Ç∑„É•„Éº„ÉÜ„Ç£„É≥„Ç∞„Ç≤„Éº„É†</h2>
          <div className="score-display">
            <span>„Çπ„Ç≥„Ç¢: {score}</span>
            <span>ÊÆã„Çä„Çø„Éº„Ç≤„ÉÉ„Éà: {targets.length}</span>
          </div>
          <div className="game-controls">
            {!gameActive && !showScoreManager && (
              <button onClick={startGame} className="start-btn">
                üéÆ „Ç≤„Éº„É†ÈñãÂßã
              </button>
            )}
            {gameActive && (
              <button onClick={endGame} className="end-btn">
                ‚èπÔ∏è „Ç≤„Éº„É†ÁµÇ‰∫Ü
              </button>
            )}
          </div>
        </div>
        
        {showScoreManager && (
          <ScoreManager currentScore={score} />
        )}
      </div>

      <a-scene embedded vr-mode-ui="enabled: false">
        {/* „Ç´„É°„É© */}
        <a-entity
          camera
          look-controls
          wasd-controls
          position="0 1.6 0"
        />

        {/* „Çø„Éº„Ç≤„ÉÉ„Éà */}
        {targets.map(target => (
          <a-sphere
            key={target.id}
            position={target.position}
            radius={target.size}
            color={target.color}
            animation="property: rotation; to: 0 360 0; loop: true; dur: 3000"
            event-set__click="
              _event: click;
              material.color: #FF0000;
              animation.dur: 500;"
            onClick={() => handleTargetClick(target.id)}
            class="target"
          />
        ))}

        {/* Âú∞Èù¢ */}
        <a-plane
          position="0 0 -4"
          rotation="-90 0 0"
          width="10"
          height="10"
          color="#7BC8A4"
        />

        {/* Á©∫ */}
        <a-sky color="#87CEEB" />

        {/* „É©„Ç§„ÉÜ„Ç£„É≥„Ç∞ */}
        <a-light type="ambient" color="#404040" />
        <a-light type="directional" position="0 1 0" color="#ffffff" intensity="0.8" />
      </a-scene>
    </div>
  );
};

export default ShootingGame; 